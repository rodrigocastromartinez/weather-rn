{"version":3,"file":"BuildStep.js","sourceRoot":"","sources":["../src/BuildStep.ts"],"names":[],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BuildStepContext, BuildStepGlobalContext } from './BuildStepContext.js';\nimport { BuildStepInput, BuildStepInputById, makeBuildStepInputByIdMap } from './BuildStepInput.js';\nimport {\n  BuildStepOutput,\n  BuildStepOutputById,\n  SerializedBuildStepOutput,\n  makeBuildStepOutputByIdMap,\n} from './BuildStepOutput.js';\nimport { BIN_PATH } from './utils/shell/bin.js';\nimport { getDefaultShell, getShellCommandAndArgs } from './utils/shell/command.js';\nimport {\n  cleanUpStepTemporaryDirectoriesAsync,\n  createTemporaryEnvsDirectoryAsync,\n  createTemporaryOutputsDirectoryAsync,\n  saveScriptToTemporaryFileAsync,\n} from './BuildTemporaryFiles.js';\nimport { spawnAsync } from './utils/shell/spawn.js';\nimport { interpolateWithInputs } from './utils/template.js';\nimport { BuildStepRuntimeError } from './errors.js';\nimport { BuildStepEnv } from './BuildStepEnv.js';\nimport { BuildRuntimePlatform } from './BuildRuntimePlatform.js';\n\nexport enum BuildStepStatus {\n  NEW = 'new',\n  IN_PROGRESS = 'in-progress',\n  CANCELED = 'canceled',\n  FAIL = 'fail',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n}\n\nexport enum BuildStepLogMarker {\n  START_STEP = 'start-step',\n  END_STEP = 'end-step',\n}\n\nexport type BuildStepFunction = (\n  ctx: BuildStepContext,\n  {\n    inputs,\n    outputs,\n    env,\n  }: { inputs: BuildStepInputById; outputs: BuildStepOutputById; env: BuildStepEnv }\n) => unknown;\n\n// TODO: move to a place common with tests\nconst UUID_REGEX =\n  /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/;\n\nexport interface SerializedBuildStepOutputAccessor {\n  id: string;\n  executed: boolean;\n  outputById: Record<string, SerializedBuildStepOutput>;\n  displayName: string;\n}\n\nexport class BuildStepOutputAccessor {\n  constructor(\n    public readonly id: string,\n    public readonly displayName: string,\n    protected readonly executed: boolean,\n    protected readonly outputById: BuildStepOutputById\n  ) {}\n\n  public getOutputValueByName(name: string): string | undefined {\n    if (!this.executed) {\n      throw new BuildStepRuntimeError(\n        `Failed getting output \"${name}\" from step \"${this.displayName}\". The step has not been executed yet.`\n      );\n    }\n    if (!this.hasOutputParameter(name)) {\n      throw new BuildStepRuntimeError(`Step \"${this.displayName}\" does not have output \"${name}\".`);\n    }\n    return this.outputById[name].value;\n  }\n\n  public hasOutputParameter(name: string): boolean {\n    return name in this.outputById;\n  }\n\n  public serialize(): SerializedBuildStepOutputAccessor {\n    return {\n      id: this.id,\n      executed: this.executed,\n      outputById: Object.fromEntries(\n        Object.entries(this.outputById).map(([key, value]) => [key, value.serialize()])\n      ),\n      displayName: this.displayName,\n    };\n  }\n\n  public static deserialize(\n    serialized: SerializedBuildStepOutputAccessor\n  ): BuildStepOutputAccessor {\n    const outputById = Object.fromEntries(\n      Object.entries(serialized.outputById).map(([key, value]) => [\n        key,\n        BuildStepOutput.deserialize(value),\n      ])\n    );\n    return new BuildStepOutputAccessor(\n      serialized.id,\n      serialized.displayName,\n      serialized.executed,\n      outputById\n    );\n  }\n}\n\nexport class BuildStep extends BuildStepOutputAccessor {\n  public readonly id: string;\n  public readonly name?: string;\n  public readonly displayName: string;\n  public readonly supportedRuntimePlatforms?: BuildRuntimePlatform[];\n  public readonly inputs?: BuildStepInput[];\n  public readonly outputs?: BuildStepOutput[];\n  public readonly command?: string;\n  public readonly fn?: BuildStepFunction;\n  public readonly shell: string;\n  public readonly ctx: BuildStepContext;\n  public readonly env: BuildStepEnv;\n  public status: BuildStepStatus;\n\n  private readonly internalId: string;\n  private readonly inputById: BuildStepInputById;\n  protected readonly outputById: BuildStepOutputById;\n  protected executed = false;\n\n  public static getNewId(userDefinedId?: string): string {\n    return userDefinedId ?? uuidv4();\n  }\n\n  public static getDisplayName({\n    id,\n    name,\n    command,\n  }: {\n    id: string;\n    name?: string;\n    command?: string;\n  }): string {\n    if (name) {\n      return name;\n    }\n    if (!id.match(UUID_REGEX)) {\n      return id;\n    }\n    if (command) {\n      const splits = command.trim().split('\\n');\n      for (const split of splits) {\n        const trimmed = split.trim();\n        if (trimmed && !trimmed.startsWith('#')) {\n          return trimmed;\n        }\n      }\n    }\n    return id;\n  }\n\n  constructor(\n    ctx: BuildStepGlobalContext,\n    {\n      id,\n      name,\n      displayName,\n      inputs,\n      outputs,\n      command,\n      fn,\n      workingDirectory: maybeWorkingDirectory,\n      shell,\n      supportedRuntimePlatforms: maybeSupportedRuntimePlatforms,\n      env,\n    }: {\n      id: string;\n      name?: string;\n      displayName: string;\n      inputs?: BuildStepInput[];\n      outputs?: BuildStepOutput[];\n      command?: string;\n      fn?: BuildStepFunction;\n      workingDirectory?: string;\n      shell?: string;\n      supportedRuntimePlatforms?: BuildRuntimePlatform[];\n      env?: BuildStepEnv;\n    }\n  ) {\n    assert(command !== undefined || fn !== undefined, 'Either command or fn must be defined.');\n    assert(!(command !== undefined && fn !== undefined), 'Command and fn cannot be both set.');\n    const outputById = makeBuildStepOutputByIdMap(outputs);\n    super(id, displayName, false, outputById);\n\n    this.id = id;\n    this.name = name;\n    this.displayName = displayName;\n    this.supportedRuntimePlatforms = maybeSupportedRuntimePlatforms;\n    this.inputs = inputs;\n    this.outputs = outputs;\n    this.inputById = makeBuildStepInputByIdMap(inputs);\n    this.outputById = outputById;\n    this.fn = fn;\n    this.command = command;\n    this.shell = shell ?? getDefaultShell();\n    this.status = BuildStepStatus.NEW;\n\n    this.internalId = uuidv4();\n\n    const logger = ctx.baseLogger.child({\n      buildStepInternalId: this.internalId,\n      buildStepId: this.id,\n      buildStepDisplayName: this.displayName,\n    });\n    const workingDirectory =\n      maybeWorkingDirectory !== undefined\n        ? path.resolve(ctx.defaultWorkingDirectory, maybeWorkingDirectory)\n        : ctx.defaultWorkingDirectory;\n    this.ctx = ctx.stepCtx({ logger, workingDirectory });\n    this.env = env ?? {};\n\n    ctx.registerStep(this);\n  }\n\n  public async executeAsync(): Promise<void> {\n    try {\n      this.ctx.logger.info(\n        { marker: BuildStepLogMarker.START_STEP },\n        `Executing build step \"${this.displayName}\"`\n      );\n      this.status = BuildStepStatus.IN_PROGRESS;\n\n      if (this.command !== undefined) {\n        await this.executeCommandAsync();\n      } else {\n        await this.exectuteFnAsync();\n      }\n\n      this.ctx.logger.info(\n        { marker: BuildStepLogMarker.END_STEP, result: BuildStepStatus.SUCCESS },\n        `Finished build step \"${this.displayName}\" successfully`\n      );\n      this.status = BuildStepStatus.SUCCESS;\n    } catch (err) {\n      this.ctx.logger.error({ err });\n      this.ctx.logger.error(\n        { marker: BuildStepLogMarker.END_STEP, result: BuildStepStatus.FAIL },\n        `Build step \"${this.displayName}\" failed`\n      );\n      this.status = BuildStepStatus.FAIL;\n      throw err;\n    } finally {\n      this.executed = true;\n    }\n  }\n\n  public hasOutputParameter(name: string): boolean {\n    return name in this.outputById;\n  }\n\n  public getOutputValueByName(name: string): string | undefined {\n    if (!this.executed) {\n      throw new BuildStepRuntimeError(\n        `Failed getting output \"${name}\" from step \"${this.displayName}\". The step has not been executed yet.`\n      );\n    }\n    if (!this.hasOutputParameter(name)) {\n      throw new BuildStepRuntimeError(`Step \"${this.displayName}\" does not have output \"${name}\".`);\n    }\n    return this.outputById[name].value;\n  }\n\n  public canBeRunOnRuntimePlatform(): boolean {\n    return (\n      !this.supportedRuntimePlatforms ||\n      this.supportedRuntimePlatforms.includes(this.ctx.global.runtimePlatform)\n    );\n  }\n\n  private async executeCommandAsync(): Promise<void> {\n    assert(this.command, 'Command must be defined.');\n\n    try {\n      const command = this.interpolateInputsAndGlobalContextInCommand(this.command, this.inputs);\n      this.ctx.logger.debug(`Interpolated inputs in the command template`);\n\n      const outputsDir = await createTemporaryOutputsDirectoryAsync(this.ctx.global, this.id);\n      this.ctx.logger.debug(`Created temporary directory for step outputs: ${outputsDir}`);\n\n      const envsDir = await createTemporaryEnvsDirectoryAsync(this.ctx.global, this.id);\n      this.ctx.logger.debug(\n        `Created temporary directory for step environment variables: ${outputsDir}`\n      );\n\n      const scriptPath = await saveScriptToTemporaryFileAsync(this.ctx.global, this.id, command);\n      this.ctx.logger.debug(`Saved script to ${scriptPath}`);\n\n      const { command: shellCommand, args } = getShellCommandAndArgs(this.shell, scriptPath);\n      this.ctx.logger.debug(\n        `Executing script: ${shellCommand}${args !== undefined ? ` ${args.join(' ')}` : ''}`\n      );\n      await spawnAsync(shellCommand, args ?? [], {\n        cwd: this.ctx.workingDirectory,\n        logger: this.ctx.logger,\n        env: this.getScriptEnv({ outputsDir, envsDir }),\n      });\n      this.ctx.logger.debug(`Script completed successfully`);\n\n      await this.collectAndValidateOutputsAsync(outputsDir);\n      await this.collectAndUpdateEnvsAsync(envsDir);\n      this.ctx.logger.debug('Finished collecting output paramters');\n    } finally {\n      await cleanUpStepTemporaryDirectoriesAsync(this.ctx.global, this.id);\n    }\n  }\n\n  private async exectuteFnAsync(): Promise<void> {\n    assert(this.fn, 'Function (fn) must be defined');\n\n    try {\n      const outputsDir = await createTemporaryOutputsDirectoryAsync(this.ctx.global, this.id);\n      this.ctx.logger.debug(`Created temporary directory for step outputs: ${outputsDir}`);\n\n      const envsDir = await createTemporaryEnvsDirectoryAsync(this.ctx.global, this.id);\n      this.ctx.logger.debug(\n        `Created temporary directory for step environment variables: ${outputsDir}`\n      );\n\n      await this.fn(this.ctx, {\n        inputs: this.inputById,\n        outputs: this.outputById,\n        env: this.getScriptEnv({ outputsDir, envsDir }),\n      });\n\n      this.ctx.logger.debug(`Script completed successfully`);\n\n      await this.collectAndValidateOutputsAsync(outputsDir);\n      await this.collectAndUpdateEnvsAsync(envsDir);\n      this.ctx.logger.debug('Finished collecting output paramters');\n    } finally {\n      await cleanUpStepTemporaryDirectoriesAsync(this.ctx.global, this.id);\n    }\n  }\n\n  private interpolateInputsAndGlobalContextInCommand(\n    command: string,\n    inputs?: BuildStepInput[]\n  ): string {\n    if (!inputs) {\n      return this.ctx.global.interpolate(command);\n    }\n    const vars = inputs.reduce((acc, input) => {\n      acc[input.id] =\n        typeof input.value === 'object'\n          ? JSON.stringify(input.value)\n          : input.value?.toString() ?? '';\n      return acc;\n    }, {} as Record<string, string>);\n    const valueInterpolatedWithGlobalContext = this.ctx.global.interpolate(command);\n    return interpolateWithInputs(valueInterpolatedWithGlobalContext, vars);\n  }\n\n  private async collectAndValidateOutputsAsync(outputsDir: string): Promise<void> {\n    const files = await fs.readdir(outputsDir);\n\n    const nonDefinedOutputIds: string[] = [];\n    for (const outputId of files) {\n      if (!(outputId in this.outputById)) {\n        nonDefinedOutputIds.push(outputId);\n      } else {\n        const file = path.join(outputsDir, outputId);\n        const rawContents = await fs.readFile(file, 'utf-8');\n        const value = rawContents.trim();\n        this.outputById[outputId].set(value);\n      }\n    }\n\n    if (nonDefinedOutputIds.length > 0) {\n      const idsString = nonDefinedOutputIds.map((i) => `\"${i}\"`).join(', ');\n      this.ctx.logger.warn(`Some outputs are not defined in step config: ${idsString}`);\n    }\n\n    const nonSetRequiredOutputIds: string[] = [];\n    for (const output of this.outputs ?? []) {\n      try {\n        const value = output.value;\n        this.ctx.logger.debug(`Output parameter \"${output.id}\" is set to \"${value}\"`);\n      } catch (err) {\n        this.ctx.logger.debug({ err }, `Getting value for output parameter \"${output.id}\" failed.`);\n        nonSetRequiredOutputIds.push(output.id);\n      }\n    }\n    if (nonSetRequiredOutputIds.length > 0) {\n      const idsString = nonSetRequiredOutputIds.map((i) => `\"${i}\"`).join(', ');\n      throw new BuildStepRuntimeError(`Some required outputs have not been set: ${idsString}`, {\n        metadata: { ids: nonSetRequiredOutputIds },\n      });\n    }\n  }\n\n  private async collectAndUpdateEnvsAsync(envsDir: string): Promise<void> {\n    const filenames = await fs.readdir(envsDir);\n\n    const entries = await Promise.all(\n      filenames.map(async (basename) => {\n        const rawContents = await fs.readFile(path.join(envsDir, basename), 'utf-8');\n        return [basename, rawContents];\n      })\n    );\n    this.ctx.global.updateEnv({\n      ...this.ctx.global.env,\n      ...Object.fromEntries(entries),\n    });\n  }\n\n  private getScriptEnv({\n    envsDir,\n    outputsDir,\n  }: {\n    envsDir: string;\n    outputsDir: string;\n  }): Record<string, string> {\n    const env = { ...this.ctx.global.env, ...this.env };\n    const currentPath = env.PATH ?? process.env.PATH;\n    const newPath = currentPath ? `${BIN_PATH}:${currentPath}` : BIN_PATH;\n    return {\n      ...env,\n      __EXPO_STEPS_OUTPUTS_DIR: outputsDir,\n      __EXPO_STEPS_ENVS_DIR: envsDir,\n      __EXPO_STEPS_WORKING_DIRECTORY: this.ctx.workingDirectory,\n      PATH: newPath,\n    };\n  }\n}\n"]}